(provide 'alxest-unicode)
;; Input of unicode symbols
(require 'math-symbol-lists)
; Automatically use math input method for Coq files
(add-hook 'coq-mode-hook (lambda () (set-input-method "math")))
(add-hook 'coq-mode-hook (lambda () (setq current-input-method "math")))
(defun activate-default-input-method ()
  (interactive)
  (activate-input-method default-input-method))
(add-hook 'coq-mode-hook 'activate-default-input-method)
;; (add-hook 'coq-mode-hook (lambda ()
;;   (progn (progn (print "A") (set-input-method "math")) (print "B"))))
;; (add-hook 'coq-mode-hook (lambda () (activate-input-method "math")))
;; (eval-after-load "coq" '(set-input-method "math"))
; Input method for the minibuffer
(defun my-inherit-input-method ()
  "Inherit input method from `minibuffer-selected-window'."
  (let* ((win (minibuffer-selected-window))
         (buf (and win (window-buffer win))))
    (when buf
      (activate-input-method (buffer-local-value 'current-input-method buf)))))
(add-hook 'minibuffer-setup-hook #'my-inherit-input-method)
; Define the actual input method
(quail-define-package "math" "UTF-8" "Ω" t)
(quail-define-rules ; add whatever extra rules you want to define here...
 ("\\!"   ?ǃ)
 ("\\u"   ?↑)
 ("\\d"   ?↓)
 ("\\s"   ?Σ)
 ("\\e"   ?ε) ;ϵ
 ("\\aa"  ?●)
 ("\\af"  ?◯)
 ("\\+"   ?⋅)
 ("\\*"   ?∘)
 ;; ("\\ent"    ?⊢)
 ("\\valid"  ?✓)
 ("\\box"    ?□)
 ;; ("\\later"  ?▷)
 ;; ("\\pred"   ?φ)
 ("\\a"    ?∧)
 ("\\o"     ?∨)
 ;; ("\\comp"   ?∘)
 ;; ("\\ccomp"  ?◎)
 ;; ("\\all"    ?∀)
 ;; ("\\ex"     ?∃)
 ;; ("\\to"     ?→)
 ;; ("\\*"    ?∗)
 ("\\lc"     ?⌜)
 ("\\rc"     ?⌝)
 ("\\ld"     ?⌞)
 ("\\rd"     ?⌟)
 ("\\sep"     ?∗)
 ;; ("\\lam"    ?λ)
 ;; ("\\empty"  ?∅)
 ;; ("\\Lam"    ?Λ)
 ;; ("\\Sig"    ?Σ)
 ;; ("\\-"      ?∖)
 ;; ("\\aa"     ?●)
 ;; ("\\af"     ?◯)
 ;; ("\\iff"    ?↔)
 ;; ("\\gname"  ?γ)
 ("\\incl"   ?≼)
 ;; ("\\latert" ?▶)
 ("\\cong"     ?≅)
 ("\\s-"     ?⁻)
 ("\\s+"     ?⁺)
 ("\\s1"     ?¹)
 ("\\sl"     ?̸)
 ("\\lr"     ?⟶)
 ("\\dr"     ?⟹)
 ("\\prod"     ?∏)
 ("\\coprod"     ?∐)
 ("\\bplus"     ?＋)
 ("\\lam"     ?λ)
 ("\\mref"     ?⊑)
 ("\\mrefr"     ?⊒)
 ("\\W"     ?𝑊)
 ("\\w"     ?𝑤)
 ("\\M"     ?𝑀)
)
(mapc (lambda (x)
        (if (cddr x)
            (quail-defrule (cadr x) (car (cddr x)))))
      (append math-symbol-list-basic math-symbol-list-extended))
